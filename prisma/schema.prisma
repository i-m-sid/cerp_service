// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DiscountType {
  FIXED
  PERCENTAGE
}

enum FieldType {
  TEXT
  NUMBER
  DECIMAL
  BOOLEAN
  DATE
  SINGLE_SELECT
  MULTI_SELECT
}


model User {
  id            String    @id @default(cuid())
  email         String    @unique
  firstName     String
  lastName      String
  password      String    // Hashed password
  picture       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Customer {
  id              String       @id @default(cuid())
  customerTypeId  String
  gstNumber       String?      @unique
  legalName       String
  tradeName       String?
  phoneNumber     String?
  email           String?
  openingBalance  Decimal      @default(0)
  address         Json?        // primary address
  placeOfSupply   Json?        // array of addresses
  customFields    Json?        // user-defined extra field

  customerType    CustomerType @relation(fields: [customerTypeId], references: [id])
  vehicles        Vehicle[]
}

model CustomerType {
  id        String      @id @default(cuid())
  label     String      @unique
  createdBy String                             // FK to user/org who created it

  customers Customer[]  // reverse relation
  templates ChallanTemplate[] @relation("AllowedCustomerTypes")
}


model ChallanTemplate {
  id              String                      @id @default(cuid())
  name            String
  description     String?
  fieldSchema     ChallanTemplateField[]
  createdBy       String                      // user/org ID
  createdAt       DateTime                    @default(now())
  updatedAt       DateTime                    @updatedAt

  challans        Challan[]                   // all challans of this type
  statuses        ChallanStatus[]             // all status options for this template
  allowedCustomerTypes  CustomerType[]  @relation("AllowedCustomerTypes")
  allowedItemCategories ItemCategory[]      @relation("SupportedItemCategories")
}

model ChallanTemplateField {
  id          String        @id @default(cuid())
  templateId  String
  label       String        // "Vehicle", "Driver", etc.
  key         String        // JSON key in customFields
  type        FieldType
  flex        Int
  row         Int
  column      Int
  isRequired  Boolean       @default(false)
  data        String[]
  refModel    String?       // e.g., "Vehicle", "Customer"
  refKey      String?       // e.g., "id", "vehicleNumber"
  refDisplay  String?       // e.g., "vehicleNumber (type)"

  template    ChallanTemplate @relation(fields: [templateId], references: [id])
}

model ItemCategory {
  id          String       @id @default(cuid())
  name        String
  description String?
  hsnCode     String?
  createdBy   String        // user/org

  items       Item[]
  templates   ChallanTemplate[] @relation("SupportedItemCategories")
  allowedUnits UnitOfMeasurement[] @relation("CategoryUOMs")
}

model Item {
  id            String        @id @default(cuid())
  name          String
  description   String?
  categoryId    String
  createdBy     String         // user/org ID

  category      ItemCategory  @relation(fields: [categoryId], references: [id])
  allowedUnits  UnitOfMeasurement[] @relation("ItemUOMs")
}

model Challan {
  id             String           @id @default(cuid())
  challanNumber  String           @unique
  date           DateTime         @default(now())
  customerId     String
  templateId     String
  statusId       String
  customFields   Json             // additional custom fields from template
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  template       ChallanTemplate  @relation(fields: [templateId], references: [id])
  status         ChallanStatus    @relation(fields: [statusId], references: [id])
}

model ChallanStatus {
  id          String           @id @default(cuid())
  label       String
  color       String?
  isDefault   Boolean          @default(false)
  templateId  String

  template    ChallanTemplate  @relation(fields: [templateId], references: [id])
  challans    Challan[]        // challans using this status
}

model UnitOfMeasurement {
  id         String          @id @default(cuid())
  label      String          // e.g., "Kilogram"
  shortCode  String          // e.g., "kg"

  categories ItemCategory[]  @relation("CategoryUOMs")
  items      Item[]    @relation("ItemUOMs")
}

model Vehicle {
  id             String    @id @default(cuid())
  vehicleNumber  String    @unique               // e.g., "MH12AB1234"
  type           String                          // e.g., "Truck", "Van", etc.
  registeredAt   DateTime?
  isActive       Boolean   @default(true)
  ownerId        String
  lastFuelOdometerReading Decimal?
  lastServiceOdometerReading Decimal?
  lastServiceDate DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  owner          Customer  @relation(fields: [ownerId], references: [id])
}

model Royalty {
  id         String              @id @default(cuid())
  royaltyNo  String              @unique                 // e.g., RLT-2025-0001
  quantity   Decimal

  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
}



